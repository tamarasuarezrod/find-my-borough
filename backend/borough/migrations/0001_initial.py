# Generated by Django 5.2 on 2025-04-12 03:41

import cloudinary_storage.storage
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Borough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('image', models.ImageField(blank=True, null=True, max_length=300, storage=cloudinary_storage.storage.MediaCloudinaryStorage(), upload_to='boroughs/')),
                ('norm_rent', models.FloatField(blank=True, null=True)),
                ('norm_crime', models.FloatField(blank=True, null=True)),
                ('norm_youth', models.FloatField(blank=True, null=True)),
                ('norm_centrality', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CommunityFeature',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CommunityRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('borough', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='borough.borough')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='borough.communityfeature')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'borough', 'feature')},
            },
        ),
    ]
